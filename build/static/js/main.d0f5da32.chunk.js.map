{"version":3,"sources":["panels/Workflow.js","panels/Games.js","panels/Profile.js","panels/LeaderBoard.js","panels/Events.js","App.js","index.js"],"names":["Workflow","_ref","id","react_default","a","createElement","vkui","Games","Profile","fetchedUser","title","before","photo_200","src","description","city","concat","first_name","last_name","LeaderBoard","Events","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activePanel","onPanelChange","bind","assertThisInitialized","_this2","connect","subscribe","e","detail","type","setState","data","console","log","send","currentTarget","dataset","story","activeStory","tabbar","onClick","selected","data-story","text","newsfeed_default","search_default","label","messages_default","notifications_default","more_default","panels_Workflow","panels_Games","panels_LeaderBoard","panels_Events","panels_Profile","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d0f5da32.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\n\nconst Workflow = ({ id }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Workflow</PanelHeader>\n\t</Panel>\n);\n\nWorkflow.propTypes = {\n\tid: PropTypes.string.isRequired\n};\nexport default Workflow;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\n\nconst Games = ({ id }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Games</PanelHeader>\n\t</Panel>\n);\n\nGames.propTypes = {\n\tid: PropTypes.string.isRequired\n};\nexport default Games;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\n\nconst Profile = ({ id, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Profile</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\t</Panel>\n);\n\nProfile.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\nexport default Profile;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\n\nconst LeaderBoard = ({ id }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>LeaderBoard</PanelHeader>\n\t</Panel>\n);\n\nLeaderBoard.propTypes = {\n\tid: PropTypes.string.isRequired\n};\n\nexport default LeaderBoard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\n\nconst Events = ({ id }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Events</PanelHeader>\n\t</Panel>\n);\n\nEvents.propTypes = {\n\tid: PropTypes.string.isRequired\n};\nexport default Events;","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View, Epic, Tabbar, TabbarItem, Panel, PanelHeader } from '@vkontakte/vkui';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Workflow from \"./panels/Workflow\";\nimport Games from \"./panels/Games\";\nimport Profile from './panels/Profile';\nimport Leaderboard from \"./panels/LeaderBoard\";\nimport Events from \"./panels/Events\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activePanel: 'workflow',\n      fetchedUser: null,\n    };\n    this.onPanelChange = this.onPanelChange.bind(this);\n  }\n\n  componentDidMount() {\n    connect.subscribe(e => {\n      switch (e.detail.type) {\n        case 'VKWebAppGetUserInfoResult':\n          this.setState({ fetchedUser: e.detail.data });\n          break;\n        default:\n          console.log(e.detail.type);\n      }\n    });\n    connect.send('VKWebAppGetUserInfo', {});\n  }\n\n  /*go = e => {\n    this.setState({ activePanel: e.currentTarget.dataset.to });\n  };*/\n\n  onPanelChange (e) {\n    this.setState({ activePanel: e.currentTarget.dataset.story })\n  }\n\n  render() {\n    return (\n\n      /*<View activePanel={this.state.activePanel}>\n        <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n        <Persik id=\"persik\" go={this.go} />\n        <Profile id=\"profile\" fetchedUser={this.state.fetchedUser} go={this.go}/>\n        <Workflow id=\"workflow\" go={this.go} />\n      </View>*/\n\n      // Our bottom bar\n      <Epic activeStory={this.state.activePanel} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={this.onPanelChange}\n            selected={this.state.activePanel === 'workflow'}\n            data-story=\"workflow\"\n            text=\"Workflow\"\n          ><Icon28Newsfeed /></TabbarItem>\n          <TabbarItem\n            onClick={this.onPanelChange}\n            selected={this.state.activePanel === 'games'}\n            data-story=\"games\"\n            text=\"Games\"\n          ><Icon28Search /></TabbarItem>\n          <TabbarItem\n            onClick={this.onPanelChange}\n            selected={this.state.activePanel === 'profile'}\n            data-story=\"profile\"\n            label=\"12\"\n            text=\"Profile\"\n          ><Icon28Messages /></TabbarItem>\n          <TabbarItem\n            onClick={this.onPanelChange}\n            selected={this.state.activePanel === 'leaderboard'}\n            data-story=\"leaderboard\"\n            text=\"Leaderboard.\"\n          ><Icon28Notifications /></TabbarItem>\n          <TabbarItem\n            onClick={this.onPanelChange}\n            selected={this.state.activePanel === 'events'}\n            data-story=\"events\"\n            text=\"Events\"\n          ><Icon28More /></TabbarItem>\n        </Tabbar>\n      }>\n        \n        <View id=\"workflow\" activePanel=\"workflow\">\n          <Workflow id=\"workflow\" fetchedUser={this.state.fetchedUser}/>\n        </View>\n        <View id=\"games\" activePanel=\"games\">\n          <Games id=\"games\" fetchedUser={this.state.fetchedUser}/>\n        </View>\n        <View id=\"leaderboard\" activePanel=\"leaderboard\">\n          <Leaderboard id=\"leaderboard\" fetchedUser={this.state.fetchedUser}/>\n        </View>\n        <View id=\"events\" activePanel=\"events\">\n          <Events id=\"events\" fetchedUser={this.state.fetchedUser}/>\n        </View>\n        <View id=\"profile\" activePanel=\"profile\">\n          <Profile id=\"profile\" fetchedUser={this.state.fetchedUser}/>\n        </View>\n      </Epic>\n    );\n  }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}